const rf = document.getElementById('r-f'); const rl = document.getElementById('r-l'); const freqInput = document.querySelector('input[name="frequency"]'); const waveInput = document.querySelector('input[name="wavelength"]'); function sync() { if (rf.checked) { freqInput.disabled = false; waveInput.disabled = true } else { freqInput.disabled = true; waveInput.disabled = false } } rf.addEventListener('change', sync); rl.addEventListener('change', sync); sync(); const dist = document.getElementById('distance-input'); document.querySelectorAll('.chip').forEach(b => { b.addEventListener('click', () => { dist.value = b.dataset.d; dist.dispatchEvent(new Event('input', { bubbles: true })) }) }); function parseNum(s) { if (!s) return NaN; return Number(String(s).replace(",", ".")) } function fmtDelay(ms) { if (!isFinite(ms)) return "—"; if (ms >= 1000) { const s = (ms / 1000).toFixed(2).replace(".", ","); return s + " s" } return (Math.round(ms * 10) / 10).toString().replace(".", ",") + " ms" } function vFromTemp() { const t = parseNum(document.getElementById('temp')?.value || "15"); return 331.3 + 0.606 * (isFinite(t) ? t : 15) } const qdIn = document.getElementById('qd-distance'); const qdOut = document.getElementById('qd-out'); function recalcQD() { const d = parseNum(qdIn?.value); const v = vFromTemp(); if (isFinite(d) && d >= 0) { const ms = (d / v) * 1000; qdOut.textContent = fmtDelay(ms) } else { qdOut.textContent = "—" } } ['input', 'change'].forEach(evt => { qdIn?.addEventListener(evt, recalcQD); document.getElementById('temp')?.addEventListener(evt, () => { recalcQD(); renderGrid() }) }); function renderGrid() { const grid = document.getElementById('delay-grid'); if (!grid) return; const v = vFromTemp(); grid.innerHTML = ""; for (let m = 1; m <= 30; m++) { const ms = (m / v) * 1000; const cell = document.createElement('div'); cell.innerHTML = '<div class="k">' + m + ' m</div><div class="v">' + fmtDelay(ms) + '</div>'; grid.appendChild(cell) } } (function () { const sc = document.getElementById('qd-shortcuts'); const results = document.querySelector('.results'); if (!sc || !results) return; const lambdaM = Number(results.dataset.lambdaM || ""); if (!lambdaM || !isFinite(lambdaM)) return; const vals = [lambdaM / 4, lambdaM / 2, lambdaM]; const labels = ["λ/4", "λ/2", "λ"]; vals.forEach((v, i) => { const b = document.createElement('button'); b.type = 'button'; b.className = 'chip'; b.textContent = labels[i] + " (" + v.toFixed(2).replace(".", ",") + " m)"; b.addEventListener('click', () => { qdIn.value = v.toFixed(2); qdIn.dispatchEvent(new Event('input', { bubbles: true })) }); sc.appendChild(b) }) })(); const formEl = document.querySelector('form'); const storKey = "audio-conversor-form"; function saveForm() { const data = { input_type: document.querySelector('input[name="input_type"]:checked')?.value, frequency: freqInput?.value || "", wavelength: waveInput?.value || "", temperature: document.getElementById('temp')?.value || "", distance: dist?.value || "" }; localStorage.setItem(storKey, JSON.stringify(data)) } function loadForm() { try { const raw = localStorage.getItem(storKey); if (!raw) return; const d = JSON.parse(raw); if (d.input_type === "wavelength") rl.checked = true; else rf.checked = true; sync(); if (d.frequency) freqInput.value = d.frequency; if (d.wavelength) waveInput.value = d.wavelength; if (d.temperature) document.getElementById('temp').value = d.temperature; if (d.distance) dist.value = d.distance } catch (e) { } } formEl?.addEventListener('input', saveForm); loadForm(); document.querySelectorAll('.copy').forEach(el => { el.addEventListener('click', () => { const r = document.createRange(); r.selectNodeContents(el); const sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(r); try { document.execCommand('copy') } catch (e) { } setTimeout(() => sel.removeAllRanges(), 150) }) }); renderGrid();
